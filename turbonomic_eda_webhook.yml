---
- name: Playbok for Turbonomic recommended scaling action
  hosts: all
  gather_facts: false
  vars:
    sn_username: "{{ lookup('ansible.builtin.env', 'SN_USERNAME') }}"
    sn_instance: "{{ lookup('ansible.builtin.env', 'SN_HOST') }}"

  tasks:

    - name: Extra_vars - instance type
      ansible.builtin.debug:
        var: instance_type

    - name: Extra_vars - instance id
      ansible.builtin.debug:
        var: instance_id

    - name: Extra_vars - ec2 region
      ansible.builtin.debug:
        var: ec2_region

    - name: Extra_vars - Info
      ansible.builtin.debug:
        var: details

    - name: Extra_vars - display name
      ansible.builtin.debug:
        var: display_name

    - name: Gather information about a particular instance using it's instance ID
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_region | regex_search('(?<=::)[^::]*') }}"
        instance_ids:
          - "{{ instance_id }}"
      register: resize_ec2_instance_vm_info

    - name: Dump out the Ec2 information
      ansible.builtin.debug:
        msg: "{{ resize_ec2_instance_vm_info }}"

    - name: Testing the results
      ansible.builtin.debug:
        msg: "The current value of the target is: {{ resize_ec2_instance_vm_info['instances'][0]['instance_type'] }}"

    - name: Create incident
      servicenow.itsm.incident:
        state: new
        caller: "{{ sn_username }}"
        short_description: "Turbonomic Recommendation: Scaling EC2 Instance {{ display_name }} to {{ instance_type }}"
        description: "Turbonomic Recommendation: {{ details }} - Region: {{ ec2_region }} - Instance ID: {{ instance_id }} - Instance Name: {{ display_name }}"
        impact: low
        urgency: low
      register: new_incident
      delegate_to: localhost

    - set_fact:
        incident_number_cached: "{{ new_incident.record.number }}"
        cacheable: true

    - ansible.builtin.debug:
        msg: "A new incident has been created for Turbonomic Recommendation: {{ new_incident.record.number }}"

    - name: Resize EC2 Instance if the recommended instance type does not match the current instance type
      
      block:
        - name: Shutdown the EC2 Instance
          amazon.aws.ec2_instance:
            region: "{{ ec2_region | regex_search('(?<=::)[^::]*') }}"
            instance_ids:
              - "{{ instance_id }}"
            instance_type: "{{ resize_ec2_instance_vm_info['instances'][0]['instance_type'] }}"
            state: stopped
            wait: true
          changed_when: false

        - name: Resize EC2 Instance
          # Current ec2_instance module does not support modifying the instance type so using CLI via command
          # https://github.com/ansible-collections/amazon.aws/issues/469
          ansible.builtin.command:
            cmd: >
              aws ec2 modify-instance-attribute
              --region "{{ ec2_region | regex_search('(?<=::)[^::]*') }}"
              --instance-id "{{ instance_id }}"
              --instance-type "{{ instance_type }}"
          changed_when: true

        - name: Startup EC2 Instance
          amazon.aws.ec2_instance:
            region: "{{ ec2_region | regex_search('(?<=::)[^::]*') }}"
            instance_ids:
              - "{{ instance_id }}"
            instance_type: "{{ resize_ec2_instance_vm_info['instances'][0]['instance_type'] }}"
            # Production should use started to ensure status checks
            state: started
            # state: running
            wait: true
      when: instance_type != resize_ec2_instance_vm_info['instances'][0]['instance_type']

    - name: Re-Query the instance to verify the new Instance Type
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_region | regex_search('(?<=::)[^::]*') }}"
        instance_ids:
          - "{{ instance_id }}"
      register: resize_ec2_instance_vm_info_new

    - name: Update the ServiceNow Ticket to reflect the new Instance Type
      servicenow.itsm.incident:
        state: resolved
        caller: "{{ sn_username }}"
        number: "{{ new_incident.record.number }}"
        close_code: "Solved (Permanently)"
        close_notes: "The new value of the target is: {{ resize_ec2_instance_vm_info_new['instances'][0]['instance_type'] }}"